@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://www.google.com/design/spec/style/color.html
$black-87-opacity: rgba(black, 0.87);
// @deprecated renamed to $light-primary-text.
// @deletion-target 7.0.0
$white-87-opacity: rgba(white, 0.87);
// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.
// @deletion-target 7.0.0
$black-12-opacity: rgba(black, 0.12);
// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.
// @deletion-target 7.0.0
$white-12-opacity: rgba(white, 0.12);
// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.
// @deletion-target 7.0.0
$black-6-opacity: rgba(black, 0.06);
// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.
// @deletion-target 7.0.0
$white-6-opacity: rgba(white, 0.06);

$dark-primary-text: rgba(black, 0.87);
$dark-secondary-text: rgba(black, 0.54);
$dark-disabled-text: rgba(black, 0.38);
$dark-dividers: rgba(black, 0.12);
$dark-focused: rgba(black, 0.12);
$light-primary-text: white;
$light-secondary-text: rgba(white, 0.7);
$light-disabled-text: rgba(white, 0.5);
$light-dividers: rgba(white, 0.12);
$light-focused: rgba(white, 0.12);
$iap: (
    50: #EEF8EB,
    100: #CDECC5,
    200: #9CD98C,
    300: #7CCC66,
    400: #5BC040,
    500: #4BBA2D,
    600: #3E9925,
    700: #30771D,
    800: #235515,
    900: #15330D,
    A100: #A8C2A2,
    A200: #729E66,
    A400: #438C2F,
    A700: #1F4C13,
    contrast: (
        50: $white-87-opacity,
        100: $white-87-opacity,
        200: $white-87-opacity,
        300: white,
        400: white,
        500: $white-87-opacity,
        600: $white-87-opacity,
        700: $white-87-opacity,
        800: $white-87-opacity,
        900: $white-87-opacity,
        A100: $white-87-opacity,
        A200: white,
        A400: white,
        A700: $white-87-opacity,
    )
);
// Foreground palette for light themes.
$mat-light-theme-foreground: (
    base:              white,
    divider:           $dark-dividers,
    dividers:          $dark-dividers,
    disabled:          $dark-disabled-text,
    disabled-button:   rgba(black, 0.26),
    disabled-text:     $dark-disabled-text,
    hint-text:         $dark-disabled-text,
    secondary-text:    $dark-secondary-text,
    icon:              map-get($mat-grey, 50),
    icons:             map-get($mat-grey, 50),
    text:              #4C4C4C,
    slider-min:        rgba(black, 0.87),
    slider-off:        rgba(black, 0.26),
    slider-off-active: rgba(black, 0.38),
  );
// Background palette for light themes.
$mat-light-theme-background: (
    status-bar: map_get($mat-grey, 300),
    app-bar:    map_get($mat-grey, 100),
    background: map_get($mat-grey, 50),
    hover:      rgba(black, 0.04),
    card:       white,
    dialog:     white,
    disabled-button: rgba(black, 0.12),
    raised-button: map_get($iap, 500),
    focused-button: $dark-focused,
    selected-button: map_get($mat-grey, 300),
    selected-disabled-button: map_get($mat-grey, 400),
    disabled-button-toggle: map_get($mat-grey, 200),
    unselected-chip: map_get($mat-grey, 300),
    disabled-list-option: map_get($mat-grey, 200),
  );

  $iap-primary:   mat-palette($iap);
  $iap-accent:    mat-palette($mat-grey);
  
  // The warn palette is optional (defaults to red).
  $iap-warn:      mat-palette($mat-red);
  
  // Create the theme object (a Sass map containing all of the palettes).
  $iap-theme:     mat-light-theme($iap-primary, $iap-accent, $iap-warn);
// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($iap-theme);
@include mat-input-theme($iap-theme);